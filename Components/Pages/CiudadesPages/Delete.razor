@page "/Ciudades/Delete/{CiudadId:int}"
@inject CiudadesService ciudadesService
@inject NavigationManager Navegacion
@rendermode InteractiveServer

<PageTitle>Confirmar eliminaci&oacute;n</PageTitle>

<EditForm Model="CiudadSeleccionada" OnValidSubmit="ConfirmarEliminacion">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            <!-- Encabezado -->
            <div class="card-header bg-danger text-white">
                <h4 class="bi bi-trash"> Eliminar Ciudad</h4>
            </div>

            <div class="card-body">
                <article class="contenido">
                    <p class="texto-destacado">¿Deseas proceder con la eliminaci&oacute;n de esta Ciudad?</p>
                    <div class="detalle">
                        <span><strong>ID: </strong>@CiudadSeleccionada.CiudadId</span>
                    </div>
                    <div class="detalle">
                        <span><strong>Nombre: </strong>@CiudadSeleccionada.CiudadNombre</span>
                    </div>
                </article>
                <!-- Pie -->
                <footer class="pie text-center">
                    <a href="/Clientes/Index" class="btn btn-info bi bi-arrow-left"> Regresar</a>
                    <button type="button" class="btn btn-danger  bi bi-trash" @onclick="async () => await ConfirmarEliminacion()">Eliminar</button>
                </footer>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int CiudadId { get; set; }
    public List<Ciudades> Ciudades { get; set; } = new List<Ciudades>();
    public Ciudades CiudadSeleccionada { get; set; } = new Ciudades();
    [Inject] protected ToastService NotificacionServicio { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (CiudadId > 0)
        {
            CiudadSeleccionada = await ciudadesService.Buscar(CiudadId);
            Ciudades = await ciudadesService.Listar(t => true);

        }
    }

    public async Task ConfirmarEliminacion()
    {
        if (CiudadSeleccionada != null)
        {
            var resultado = await ciudadesService.Eliminar(CiudadId);
            if (resultado)
            {
                NotificacionServicio.Notify(new(ToastType.Danger, "Eliminada exitosamente.", "La ciudad se ha eliminado correctamenete!"));
                Navegacion.NavigateTo("/Ciudades/Index");
            }
            else
            {
                NotificacionServicio.Notify(new(ToastType.Warning, "Error al eliminar la ciudad", "Ocurrió un error al intentar eliminar la ciudad."));
            }
        }
    }
}
