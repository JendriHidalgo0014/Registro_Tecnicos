@page "/Clientes/Delete/{ClienteId:int}"
@inject ClientesService clientesService
@inject TecnicosService tecnicosService
@inject NavigationManager Navegacion
@rendermode InteractiveServer

<PageTitle>Confirmar eliminaci&oacute;n</PageTitle>

<EditForm Model="ClienteSeleccionado" OnValidSubmit="ConfirmarEliminacion">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            <!-- Encabezado -->
            <div class="card-header bg-danger text-white">
                <h4 class="bi bi-trash"> Eliminar Cliente</h4>
            </div>

            <div class="card-body">
                <article class="contenido">
                    <p class="texto-destacado">¿Deseas proceder con la eliminaci&oacute; de este Cliente?</p>
                    <div class="detalle">
                        <span><strong>ID: </strong>@ClienteSeleccionado.ClienteId</span>
                    </div>
                    <div class="detalle">
                        <span><strong>Nombre: </strong>@ClienteSeleccionado.Nombres</span>
                    </div>
                    <div class="detalle">
                    <span><strong>FechaIngreso: </strong>@ClienteSeleccionado.FechaIngreso</span>
                    </div>
                <div class="detalle">
                    <span><strong>Direccion: </strong>@ClienteSeleccionado.Direccion</span>
                </div>
                <div class="detalle">
                    <span><strong>RNC: </strong>@ClienteSeleccionado.RNC</span>
                </div>
                <div class="detalle">
                    <span><strong>LimiteCredito: </strong>@ClienteSeleccionado.LimiteCredito</span>
                </div>
                </article>
                <!-- Pie -->
                <footer class="pie text-center">
                    <a href="/Clientes/Index" class="btn btn-info bi bi-arrow-left"> Regresar</a>
                    <button type="button" class="btn btn-danger  bi bi-trash" @onclick="async () => await ConfirmarEliminacion()">Eliminar</button>
                </footer>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public List<Tecnicos> Tecnicos { get; set; } = new List<Tecnicos>();
    public Clientes ClienteSeleccionado { get; set; } = new Clientes();
    [Inject] protected ToastService NotificacionServicio { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ClienteId > 0)
        {
            ClienteSeleccionado = await clientesService.Buscar(ClienteId);
            Tecnicos = await tecnicosService.Listar(t => true);

        }
    }

    public async Task ConfirmarEliminacion()
    {
        if (ClienteSeleccionado != null)
        {
            var resultado = await clientesService.Eliminar(ClienteId);
            if (resultado)
            {
                NotificacionServicio.Notify(new(ToastType.Danger, "Eliminado exitosamente.", "El cliente se ha eliminado correctamenete!"));
                Navegacion.NavigateTo("/Clientes/Index");
            }
            else
            {
                NotificacionServicio.Notify(new(ToastType.Warning, "Error al eliminar el cliente", "Ocurrió un error al intentar eliminar el cliente."));
            }
        }
}

}
